#!/usr/bin/env bash
set -eu
[ "${BASH_VERSINFO[0]}" -ge 3 ] && set -o pipefail

get_platform () {
	local platform="$(uname | tr '[:upper:]' '[:lower:]')"

	case "$platform" in
		linux|darwin|freebsd)
			echo "Platform '${platform}' supported!" >&2
			;;
		*)
			echo "Platform '${platform}' not supported!" >&2
			exit 1
			;;
	esac

	echo -n $platform
}

get_arch () {
	local arch=""

	case "$(uname -m)" in
		x86_64|amd64) arch="amd64"; ;;
		i686|i386) arch="386"; ;;
		armv6l|armv7l) arch="armv6l"; ;;
		aarch64) arch="arm64"; ;;
		ppc64le) arch="ppc64le"; ;;
		*)
			echo "Arch '$(uname -m)' not supported!" >&2
			exit 1
			;;
	esac

	echo -n $arch
}

my_mktemp () {
	local tempdir=""
	if [ "linux" = "$1" ] ; then
		tempdir=$(mktemp -d asdf-golang.XXXX)
	else
		tempdir=$(mktemp -dt asdf-golang.XXXX)
	fi
	echo -n $tempdir
}

get_download_url() {
  local version=$1
  local platform=$2

  if [ $version == "7.0.0" ]; then
    echo "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$version-$platform-x86_64.tar.gz"
  elif [ $version == "2.4.6" ]; then
    echo "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$version.tar.gz"
  else
    echo "https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-$version.tar.gz"
  fi
}

install_elasticsearch () {
    local install_type=$1
    local version=$2
    local install_path=$3
    local platform=$(get_platform)
    local arch=$(get_arch)
    local tempdir=$(my_mktemp $platform)
		local download_url=$(get_download_url $version $platform)

    curl $download_url -o "${tempdir}/archive.tar.gz"

    tar -C "$install_path" -xzf "${tempdir}/archive.tar.gz"

    rm -rf "${tempdir}"
}

install_elasticsearch $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
